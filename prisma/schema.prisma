// schema.prisma

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL") // Add this line
}

generator client {
  provider = "prisma-client-js"
}

model User {
  user_id           String    @id // Primary key, set as string since it's from Clerk
  created_at        DateTime  @default(now()) @db.Timestamptz
  email             String    @unique
  first_name        String?
  last_name         String?
  profile_image_url String?

  events UserEvent[] // Relation to UserEvent table

  @@map("users") // Maps to the users table in the database
}

model Event {
  event_id    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String
  subtitle    String?
  image       String?
  description String?
  date        String?
  location    String?
  price       String?

  users UserEvent[] // Relation to UserEvent table

  @@map("events") // Maps to the events table in the database
}

model UserEvent {
  user_id    String   // Foreign key referencing users.user_id
  event_id   String   @db.Uuid // Foreign key referencing events.event_id
  joined_at  DateTime @default(now()) @db.Timestamptz

  user  User  @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  event Event @relation(fields: [event_id], references: [event_id], onDelete: Cascade)

  @@id([user_id, event_id]) // Composite primary key for user_id and event_id
  @@map("user_events") // Maps to the user_events table in the database
}
